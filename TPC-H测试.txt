Q15涉及到创建试图，没测
Q17 Q20两个巨慢
Q11 Q16 Q18三个Calcite不行，但有提示

Q1 √
统计查询
这个查询报告已经付款的、已运送的和返回的生意的数量。

select
l_returnflag,
l_linestatus,
sum(l_quantity) as sum_qty,
sum(l_extendedprice) as sum_base_price,
sum(l_extendedprice*(1-l_discount)) as sum_disc_price,
sum(l_extendedprice*(1-l_discount)*(1+l_tax)) as sum_charge,
avg(l_quantity) as avg_qty,
avg(l_extendedprice) as avg_price,
          avg(l_discount) as avg_disc,
count(*) as count_order
from
tpch.lineitem
where
l_shipdate <= date '1998-12-01' - interval '90' day
group by
l_returnflag,
l_linestatus
order by
l_returnflag,
l_linestatus



Q2 √
WHERE条件中，使用子查询(=)
这个查询给出在给定的区域内，对于指定的零件，应该选择哪个供应者来订货。

SELECT
    s_acctbal,
    s_name,
    n_name,
    p_partkey,
    p_mfgr,
    s_address,
    s_phone,
    s_comment
FROM
    part,
    supplier,
    partsupp,
    nation,
    region
WHERE
    p_partkey = ps_partkey
AND s_suppkey = ps_suppkey
AND p_size = 15
AND p_type LIKE '%BRASS'
AND s_nationkey = n_nationkey
AND n_regionkey = r_regionkey
AND r_name = 'EUROPE'
AND ps_supplycost = (
    SELECT
        MIN(ps_supplycost)
    FROM
        partsupp,
        supplier,
        nation,
        region
    WHERE
        p_partkey = ps_partkey
    AND s_suppkey = ps_suppkey
    AND s_nationkey = n_nationkey
    AND n_regionkey = r_regionkey
    AND r_name = 'EUROPE'
)
ORDER BY
    s_acctbal DESC,
    n_name,
    s_name,
    p_partkey

替代参数
SIZE在区间[1, 50]内随机选择；
TYPE列表Syllable 3 中随机选择；
REGION在R_NAME定义的值的列表中随机选择。
e.g:
1. SIZE = 15;
2. TYPE = BRASS;
3. REGION = EUROPE.



Q3 √
多表关联统计查询，并统计(SUM)
查询给出收入在前10位的尚未运送的订单。

SELECT
    l_orderkey,
    SUM(
        l_extendedprice * (1 - l_discount)
    ) AS revenue,
    o_orderdate,
    o_shippriority
FROM
    customer,
    orders,
    lineitem
WHERE
    c_mktsegment = 'BUILDING'
AND c_custkey = o_custkey
AND l_orderkey = o_orderkey
AND o_orderdate < DATE '1995-03-01'
AND l_shipdate > DATE '1995-03-01'
GROUP BY
    l_orderkey,
    o_orderdate,
    o_shippriority
ORDER BY
    revenue DESC,
    o_orderdate

替代参数
1． SEGNENT在Segment定义的值的列表中随机选择；
2． 日期在[1995-03-01, 1995-03-31]中随机选择。



Q4 √
WHERE条件中，使用子查询(EXISTS)，并统计(COUNT)
这个查询可以让我们了解订单优先权系统工作得如何，并给出顾客满意度的一个估计值。

SELECT
    o_orderpriority,
    COUNT(*) AS order_count
FROM
    orders
WHERE
    o_orderdate >= DATE '1993-01-01'
AND o_orderdate < DATE '1993-01-01' + INTERVAL '3' MONTH
AND EXISTS (
    SELECT *
    FROM lineitem
    WHERE l_orderkey = o_orderkey
        AND l_commitdate < l_receiptdate
)
GROUP BY
    o_orderpriority
ORDER BY
    o_orderpriority

替代参数
DATE是在1993年1月和1997年10月之间随机选择的一个月的第一天。



Q5 √
多表关联查询(=)，并统计(SUM)
这个查询列出通过本地供应者获得的收入大小。

select
    n_name,
    sum(l_extendedprice * (1 - l_discount)) as revenue
from
    customer,
    orders,
    lineitem,
    supplier,
    nation,
    region
where
    c_custkey = o_custkey
    and l_orderkey = o_orderkey
    and l_suppkey = s_suppkey
    and c_nationkey = s_nationkey
    and s_nationkey = n_nationkey
    and n_regionkey = r_regionkey
    and r_name = 'ASIA'
    and o_orderdate >= date '1993-01-01'
    and o_orderdate < date '1993-01-01' + interval '1' year
group by
    n_name
order by
    revenue desc

替代参数
REGION在为R_NAME定义的值的列表中随机选择；
DATE是从1993年到1997年中随机选择的一年的1月1日。

e.g：

REGION = ASIA;
DATE = 1994-01-01


Q6 √
条件(BETWEEN AND)查询，并统计(SUM)
这个查询确定收入增加的数量，这些增加的收入是在给定的一年中在指定的百分比范围内消除了折扣产生的。这类”what if”查询可以被用来寻找增加收入的途径。

select
sum(l_extendedprice*l_discount) as revenue
from lineitem
where 
l_shipdate >= date '1994-01-01'
and l_shipdate < date '1994-01-01' + interval '1' year
and l_discount between 0.05 - 0.01 and 0.05 + 0.01
and l_quantity < 24

替代参数
1． DATE是从[1993, 1997]中随机选择的一年的1月1日；
2． DISCOUNT在区间[0.02, 0.09]中随机选择；
3． QUANTITY在区间[24, 25]中随机选择。

e.g
1. DATE = 1994-01-01;
2. DISCOUNT = 0.06;
3. QUANTITY = 24



Q7 √
带有FROM子查询，从结果集中统计(SUM)
此查询确定在两国之间货运商品的量以帮助重新谈判货运合同。

select
supp_nation, 
cust_nation, 
l_year, sum(volume) as revenue
from (
select 
n1.n_name as supp_nation, 
n2.n_name as cust_nation, 
extract(year from l_shipdate) as l_year,
l_extendedprice * (1 - l_discount) as volume
from 
supplier, 
lineitem, 
orders, 
customer, 
nation n1, 
nation n2
where 
s_suppkey = l_suppkey
and o_orderkey = l_orderkey
and c_custkey = o_custkey
and s_nationkey = n1.n_nationkey
and c_nationkey = n2.n_nationkey
and (
(n1.n_name = 'FRANCE' and n2.n_name = 'GERMANY')
or (n1.n_name = 'GERMANY' and n2.n_name = 'FRANCE')
)
and l_shipdate between date '1995-01-01' and date '1996-12-31'
) as shipping
group by 
supp_nation, 
cust_nation, 
l_year
order by 
supp_nation, 
cust_nation, 
l_year

替代函数
1． NATION1 是在N_NAME值的列表中的任意值；

2． NATION2 是在N_NAME值的列表中的任意值，且必须和条1中NATION1的值不同。

e.g

NATION1＝FRANCE
NATION2＝GERMANY



Q8 √
带有FROM多表子查询，从结果集中的查询列上带有逻辑判断(WHEN THEN ELSE)的统计(SUM)
此查询显示在过去的两年中，一个给定零件类型在某国某地区市场份额改变了多少。

select
o_year, 
sum(case 
when nation = 'BRAZIL' 
then volume
else 0
end) / sum(volume) as mkt_share
from (
select 
extract(year from o_orderdate) as o_year,
l_extendedprice * (1-l_discount) as volume, 
n2.n_name as nation
from 
part, 
supplier, 
lineitem, 
orders, 
customer, 
nation n1, 
nation n2, 
region
where 
p_partkey = l_partkey
and s_suppkey = l_suppkey
and l_orderkey = o_orderkey
and o_custkey = c_custkey
and c_nationkey = n1.n_nationkey
and n1.n_regionkey = r_regionkey
and r_name = 'AMERICA'
and s_nationkey = n2.n_nationkey
and o_orderdate between date '1995-01-01' and date '1996-12-31'
and p_type = 'ECONOMY ANODIZED STEEL' 
) as all_nations
group by 
o_year
order by 
o_year

替代参数
1． NATION是在N_NAME的值的列表中的任意值。
2． REGION是在R_NAME定义的值，R_RGIONKEY和N_REGIONKEY在那里为选中的条1的NATION协调。
3． TYPE是在三音节字符串列表中的任意值。

e.g ：
1． NATION＝BRAZIL
2． REGION＝AMERICA
3． TYPE＝ECONOMY ANODIZED STEEL



Q9 √
带有FROM多表子查询，查询表中使用函数(EXTRACT)，从结果集中统计(SUM)
此查询决定一个给定零件在一个国家和年度的利润。

select 
nation, 
o_year, 
sum(amount) as sum_profit
from (
select 
n_name as nation, 
extract(year from o_orderdate) as o_year,
l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
from 
part, 
supplier, 
lineitem, 
partsupp, 
orders, 
nation
where 
s_suppkey = l_suppkey
and ps_suppkey = l_suppkey
and ps_partkey = l_partkey
and p_partkey = l_partkey
and o_orderkey = l_orderkey
and s_nationkey = n_nationkey
and p_name like '%green%'
) as profit
group by 
nation, 
o_year
order by 
nation, 
o_year desc

替代参数
1． COLOR为生P_NAME的值的列表中的任意值
e.g
1． COLOR＝green



Q10 √
多表条件查询(>=, <)，并统计(SUM)
此查询标记那些可能对货运给他们的零件有问题的顾客。

select
c_custkey, 
c_name, 
sum(l_extendedprice * (1 - l_discount)) as revenue,
c_acctbal, 
n_name, 
c_address, 
c_phone, 
c_comment
from 
customer, 
orders, 
lineitem, 
nation
where 
c_custkey = o_custkey
and l_orderkey = o_orderkey
and o_orderdate >= date '1993-01-01'
and o_orderdate < date '1993-01-01' + interval '3' month
and l_returnflag = 'R'
and c_nationkey = n_nationkey
group by 
c_custkey, 
c_name, 
c_acctbal, 
c_phone, 
n_name, 
c_address, 
c_comment
order by 
revenue desc

替代参数
1．DATE是位于1993年一月到1994年十二月中任一月的一号。



Q11 calcite 不可
在GROUP BY中使用比较条件(HAVING >)，比较值从子查询中查出
此查询找到某一给定国供应商库存的最重要零件。

select
ps_partkey, 
sum(ps_supplycost * ps_availqty) as value
from 
partsupp, 
supplier, 
nation
where 
ps_suppkey = s_suppkey
and s_nationkey = n_nationkey
and n_name = 'GERMANY'
group by 
ps_partkey having 
sum(ps_supplycost * ps_availqty) > (
select 
sum(ps_supplycost * ps_availqty) * 0.0001
from 
partsupp, 
supplier, 
nation
where 
ps_suppkey = s_suppkey
and s_nationkey = n_nationkey
and n_name = 'GERMANY'
)
order by
value desc

替代参数
NATION 是在N_NAME值的列表中的任意值
FRACTION为0.0001/SF
e.g
1． NATION＝GERMANY
2． FRACTION＝0.0001



Q12 √
带有逻辑判断(WHEN AND/ WHEN OR)的查询，并统计(SUM)
这个查询决定选择现对便宜的货运模式是否会因为使消费者更多的在合同日期之后收到货物而对紧急优先命令产生负面影响。

select
l_shipmode, 
sum(case 
when o_orderpriority ='1-URGENT'
or o_orderpriority ='2-HIGH'
then 1
else 0
end) as high_line_count,
sum(case 
when o_orderpriority <> '1-URGENT'
and o_orderpriority <> '2-HIGH'
then 1
else 0
end) as low_line_count
from 
orders, 
lineitem
where 
o_orderkey = l_orderkey
and l_shipmode in ('MAIL', 'SHIP')
and l_commitdate < l_receiptdate
and l_shipdate < l_commitdate
and l_receiptdate >= date '1994-01-01'
and l_receiptdate < date '1994-01-01' + interval '1' year
group by 
l_shipmode
order by 
l_shipmode

替代参数
1 SHIPMODE1 是在Modes 值的列表中的任意值
2 SHIPMODE2 是在条款4. 2中定义Modes
值的列表中的任意值，且必须有别于SHIPMODE1
3 DATE 是从1993年到1997年中任一年的一月一号
e.g
1 SHIPMODE1＝MAIL
2 SHIPMODE2＝SHIP
3 DATE＝1994-01-01



Q13 √
带有FROM子查询，子查询中使用外联结
此查询寻找消费者和他们的订单之间的关系。

select 
c_count, count(*) as custdist 
from (
select 
c_custkey,
count(o_orderkey) 
from 
customer left outer join orders on 
c_custkey = o_custkey
and o_comment not like '%special%requests%'
group by 
c_custkey
)as c_orders (c_custkey, c_count)
group by 
c_count
order by 
custdist desc, 
c_count desc

替代参数
1 WORD1 为以下四个可能值中任意一个：special , pending , unusual , express.
2 WORD2 为以下四个可能值中任意一个：packages , requests , accounts , deposits.
e.g
1 WORD1＝special
2 WORD2＝requests



Q14 √
使用逻辑判断(WHEN ELSE)的查询
此查询监视像TV广告或者特别活动一类的促销带来的市场反应。

select
100.00 * sum(case 
when p_type like 'PROMO%'
then l_extendedprice*(1-l_discount)
else 0
end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from 
lineitem, 
part
where 
l_partkey = p_partkey
and l_shipdate >= date '1993-01-01'
and l_shipdate < date '1993-01-01' + interval '1' month

替代参数
1 DATE是从1993年到1997年中任一年的任一月的一号。




Q15
使用视图和表关联查询
此查询决定头等供应商以便给予奖励，给予更多订单，或是给予特别认证。

涉及到创建视图，暂时不测试了




Q16 calcite不可
在WHERE子句中使用子查询，使用IN/ NOT IN判断条件，并统计(COUNT)
此查询观察多少供应商能够以给定的贡献供应零件。这可用于决定在订单量大，任务紧急时期是否有充足的供应商。

select
p_brand, 
p_type, 
p_size, 
count(distinct ps_suppkey) as supplier_cnt
from 
partsupp, 
part
where 
p_partkey = ps_partkey
and p_brand <> 'Brand#45'
and p_type not like 'MEDIUM PLLISHED%'
and p_size in (49, 4, 23, 45, 19, 3, 36, 9)
and ps_suppkey not in (
select 
s_suppkey
from 
supplier
where 
s_comment like '%Customer%Complaints%'
)
group by 
p_brand, 
p_type, 
p_size
order by 
supplier_cnt desc, 
p_brand, 
p_type, 
p_size

替代参数
BRAND＝Brand＃MN ，M和N是两个字母，代表两个数值，相互独立，取值在1到5之间。
TYPE由任意三音节字符串的前两个音节构成。
SIZE在1到50之间任意选择的一组八个不同的值。
e.g
1. BRAND=Brand#45
1. TYPE=MEDIUM PLLISHED
1. SIZE1=49
1. SIZE2=4
1. SIZE3=23
1. SIZE4=45
1. SIZE5=19
1. SIZE6=3
1. SIZE7=36
1. SIZE8=9



Q17 巨慢，不测了
在WHERE子句中使用子查询，使用<比较，使用了AVG函数
此查询计算出如果没有没有小量订单，平均年收入将损失多少。由于大量商品的货运，这将降低管理费用。

select
sum(l_extendedprice) / 7.0 as avg_yearly
from 
lineitem, 
part
where 
p_partkey = l_partkey
and p_brand = 'Brand#23'
and p_container = 'MED BOX'
and l_quantity < (
select
0.2 * avg(l_quantity)
from 
lineitem
where 
l_partkey = p_partkey)

替代参数
1． BRAND＝'Brand#MN' ，M和N是两个字母，代表两个数值，相互独立，取值在1到5之间。
2． CONTAINER 是在Containers定义的双音节字符串列表中的任意取值。
e.g
1． BRAND＝Brand#23
2． CONTAINER＝MED BOX



Q18 calcite不行
在WHERE子句中使用IN条件从子查询结果中比较
此查询根据已下的大数量订单来给顾客排序。大数量订单定义为总数量超过某一特定的水平的订单。

select 
c_name,
c_custkey, 
o_orderkey,
o_orderdate,
o_totalprice,
sum(l_quantity)
from 
customer,
orders,
lineitem
where 
o_orderkey in (
select
l_orderkey
from
lineitem
group by 
l_orderkey having 
sum(l_quantity) > 310
)
and c_custkey = o_custkey
and o_orderkey = l_orderkey
group by 
c_name, 
c_custkey, 
o_orderkey, 
o_orderdate, 
o_totalprice
order by 
o_totalprice desc,
o_orderdate

替代参数
1． QUANTITY是位于300-315 之间的任意值。



Q19 √
多条件比较查询
此查询显示对以特定方式处理的选定品牌进行销售的总的折扣收入。这个查询是用数据挖掘工具产生格式化代码的一个例子。

select
sum(l_extendedprice * (1 - l_discount) ) as revenue
from 
lineitem, 
part
where 
(
p_partkey = l_partkey
and p_brand = 'Brand#12'
and p_container in ( 'SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') 
and l_quantity >= 1 and l_quantity <= 1 + 10 
and p_size between 1 and 5 
and l_shipmode in ('AIR', 'AIR REG')
and l_shipinstruct = 'DELIVER IN PERSON' 
)
or 
(
p_partkey = l_partkey
and p_brand = 'Brand#23'
and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
and l_quantity >= 10 and l_quantity <= 10 + 10
and p_size between 1 and 10
and l_shipmode in ('AIR', 'AIR REG')
and l_shipinstruct = 'DELIVER IN PERSON'
)
or 
(
p_partkey = l_partkey
and p_brand = 'Brand#34'
and p_container in ( 'LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
and l_quantity >= 20 and l_quantity <= 20 + 10
and p_size between 1 and 15
and l_shipmode in ('AIR', 'AIR REG')
and l_shipinstruct = 'DELIVER IN PERSON'
)

替代参数
1． QUANTITY1 是1到10之间的任意取值。
2． QUANTITY2 是10到20之间的任意取值。
3． QUANTITY3 是20到30之间的任意取值。
4． BRAND1 ，BRAND2 ，BRAND3＝‘Brand＃MN’，M和N是两个字母，代表两个数值，相互独立，取值在1到5之间。
e.g
1． QUANTITY1=1
2． QUANTITY2=10
3． QUANTITY3=20
4． BRAND1=Brand#12
5． BRAND2=Brand#23
6． BRAND3=Brand#34



Q20 巨慢，不测了
WHERE条件子查询(三层)
此查询确定在某一国能对某一零件商品提供更有竞争力价格的供应商。

select 
s_name, 
s_address
from 
supplier, nation
where 
s_suppkey in (
select 
ps_suppkey
from 
partsupp
where 
ps_partkey in (
select 
p_partkey
from 
part
where 
p_name like 'forest%'
)
and ps_availqty > (
select 
0.5 * sum(l_quantity)
from 
lineitem
where 
l_partkey = ps_partkey
and l_suppkey = ps_suppkey
and l_shipdate >= date('1994-01-01')
and l_shipdate < date('1994-01-01') + interval '1' year 
)
)
and s_nationkey = n_nationkey
and n_name = 'CANADA'
order by 
s_name

替代参数
1． COLOR为产生P_NAME的值的列表中的任意值
2． DATE为在1993年至1997年的任一年的一月一号
3． NATION为在N_NAME的值的列表中的任意值
e.g
1． COLOR＝forest
2． DATE＝1994-01-01
3． NATION＝CANADA




Q21 √
在WHERE条件中使用子查询，使用EXISTS和NOT EXISTS判断
此查询确定不能及时货运所需零件的供应商。

select 
s_name, 
count(*) as numwait
from 
supplier, 
lineitem l1, 
orders, 
nation
where 
s_suppkey = l1.l_suppkey
and o_orderkey = l1.l_orderkey
and o_orderstatus = 'F'
and l1.l_receiptdate > l1.l_commitdate
and exists ( 
select 
*
from 
lineitem l2
where 
l2.l_orderkey = l1.l_orderkey
and l2.l_suppkey <> l1.l_suppkey
)
and not exists ( 
select 
*
from 
lineitem l3
where 
l3.l_orderkey = l1.l_orderkey
and l3.l_suppkey <> l1.l_suppkey
and l3.l_receiptdate > l3.l_commitdate
)
and s_nationkey = n_nationkey
and n_name = 'SAUDI ARABIA'
group by 
s_name
order by 
numwait desc, 
s_name

替代参数
1． NATION为在N_NAME的值的列表中的任意值
e.g
1． NATION＝SAUDI ARABIA



Q22 √
在WHERE条件中使用判断子查询、IN、NOT EXISTS，并统计(SUM、COUNT)查询结果
此查询确定消费者可能购买的地理分布。

select 
cntrycode, 
count(*) as numcust, 
sum(c_acctbal) as totacctbal
from (
select 
substring(c_phone from 1 for 2) as cntrycode, 
c_acctbal
from 
customer
where 
substring(c_phone from 1 for 2) in 
('13','14','23','29','30','18','17')
and c_acctbal > (
select 
avg(c_acctbal)
from 
customer
where 
c_acctbal > 0.00
and substring (c_phone from 1 for 2) in
('13','14','23','29','30','18','17')
)
and not exists (
select 
* 
from 
orders
where 
o_custkey = c_custkey
)
) as custsale
group by 
cntrycode 
order by 
cntrycode

替代参数
1． I1…I7是在国家代码的可能值中不重复的任意值。
e.g:
1． I1＝13
2． I2=14
3． I3＝23
4． I4＝29
5． I5＝30
6． I6＝18
7． I7＝17





